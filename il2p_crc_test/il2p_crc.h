//* il2p_crc.cpp


#include <FastCRC.h>

class IL2P_CRC{
  public:
  IL2P_CRC();
  uint32_t calculate(uint8_t *buff);
  bool verify(uint8_t *buf, uint32_t received_crc);
  
  private:
  uint8_t encode_table[16] = { 0x0, 0x71, 0x62, 0x13, 0x54, 0x25, 0x36, 0x47, 0x38, 0x49, 0x5a, 0x2b, 0x6c, 0x1d, 0x0e, 0x7f };

  uint8_t decode_table[128] = {
  0x0, 0x0, 0x0, 0x3, 0x0, 0x5, 0xe, 0x7,
  0x0, 0x9, 0xe, 0xb, 0xe, 0xd, 0xe, 0xe,
  0x0, 0x3, 0x3, 0x3, 0x4, 0xd, 0x6, 0x3,
  0x8, 0xd, 0xa, 0x3, 0xd, 0xd, 0xe, 0xd,
  0x0, 0x5, 0x2, 0xb, 0x5, 0x5, 0x6, 0x5,
  0x8, 0xb, 0xb, 0xb, 0xc, 0x5, 0xe, 0xb,
  0x8, 0x1, 0x6, 0x3, 0x6, 0x5, 0x6, 0x6,
  0x8, 0x8, 0x8, 0xb, 0x8, 0xd, 0x6, 0xf,
  0x0, 0x9, 0x2, 0x7, 0x4, 0x7, 0x7, 0x7,
  0x9, 0x9, 0xa, 0x9, 0xc, 0x9, 0xe, 0x7,
  0x4, 0x1, 0xa, 0x3, 0x4, 0x4, 0x4, 0x7,
  0xa, 0x9, 0xa, 0xa, 0x4, 0xd, 0xa, 0xf,
  0x2, 0x1, 0x2, 0x2, 0xc, 0x5, 0x2, 0x7,
  0xc, 0x9, 0x2, 0xb, 0xc, 0xc, 0xc, 0xf,
  0x1, 0x1, 0x2, 0x1, 0x4, 0x1, 0x6, 0xf,
  0x8, 0x1, 0xa, 0xf, 0xc, 0xf, 0xf, 0xf };

  uint16_t m_crc;

  uint32_t m_coded_crc;

  FastCRC16 CRC16;
  
};
